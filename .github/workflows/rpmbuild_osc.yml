# This is workflow to build rpms using the SPEC file
# The Copr build service is used

name: rpmbuild_obs

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    # Looks there are no or not many native fedora-runners, hence we use a container
    container: opensuse/tumbleweed:latest
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # That workspace (the directory) is different from the RPMBUILD space
      - uses: actions/checkout@v3

      # Install rpm and copr tools
      - name: Install tooling for openbuild service
        run: zypper -y install osc

      # Get/download the source files to the right place
      - name: Get the sources for RPM package
        run: ./getsources4RPM.sh

      # setup OBS Authentication
      # You need to store your OBS authenication data under
      # Settings -> Actions -> Repository secrets
      - name: Install API token for osb
        env:
          API_TOKEN_CONTENT: ${{ secrets.OBS_API_TOKEN }}
        run: |
           mkdir -p "$HOME/.config/osc"
           echo "$API_TOKEN_CONTENT" > "$HOME/.config/osc/oscrc"

      # Submit COPR build by uploading the files to BOS
      # The path is not the $GITHUB_WORKSPACE it is the RPMBUILD space
      - name: Submit the OBS build
        run: osc ls home:useidel
